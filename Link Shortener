import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;

public class LinkShortener {
    private Map<String, String> shortToLongUrlMap;
    private Map<String, String> longToShortUrlMap;
    private static final String CHARACTERS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    private static final int SHORT_URL_LENGTH = 6;
    private static final int SERVER_PORT = 8080;

    public LinkShortener() {
        shortToLongUrlMap = new HashMap<>();
        longToShortUrlMap = new HashMap<>();
    }

    public String shortenUrl(String longUrl) {
        if (longToShortUrlMap.containsKey(longUrl)) {
            return longToShortUrlMap.get(longUrl);
        }

        StringBuilder shortUrl = new StringBuilder();
        do {
            shortUrl.setLength(0);
            Random random = new Random();
            for (int i = 0; i < SHORT_URL_LENGTH; i++) {
                int randomIndex = random.nextInt(CHARACTERS.length());
                shortUrl.append(CHARACTERS.charAt(randomIndex));
            }
        } while (shortToLongUrlMap.containsKey(shortUrl.toString()));

        shortToLongUrlMap.put(shortUrl.toString(), longUrl);
        longToShortUrlMap.put(longUrl, shortUrl.toString());

        return shortUrl.toString();
    }

    public String getLongUrl(String shortUrl) {
        return shortToLongUrlMap.getOrDefault(shortUrl, "Short URL not found");
    }

    public static void main(String[] args) throws IOException {
        LinkShortener linkShortener = new LinkShortener();
        HttpServer server = HttpServer.create(new InetSocketAddress(SERVER_PORT), 0);
        server.createContext("/", new RedirectHandler(linkShortener));
        server.start();
        System.out.println("Server started on port " + SERVER_PORT);

        // Example usage:
        String longUrl = "https://www.google.com";
        String shortUrl = linkShortener.shortenUrl(longUrl);
        System.out.println("Shortened URL: http://localhost:" + SERVER_PORT + "/" + shortUrl);
        System.out.println("Original URL: " + linkShortener.getLongUrl(shortUrl));
    }

    static class RedirectHandler implements HttpHandler {
        private LinkShortener linkShortener;

        public RedirectHandler(LinkShortener linkShortener) {
            this.linkShortener = linkShortener;
        }

        @Override
        public void handle(HttpExchange exchange) throws IOException {
            String requestMethod = exchange.getRequestMethod();
            if (requestMethod.equalsIgnoreCase("GET")) {
                String requestedPath = exchange.getRequestURI().getPath().substring(1);
                String longUrl = linkShortener.getLongUrl(requestedPath);
                if (!longUrl.equals("Short URL not found")) {
                    exchange.getResponseHeaders().set("Location", longUrl);
                    exchange.sendResponseHeaders(301, -1);
                } else {
                    exchange.sendResponseHeaders(404, -1);
                }
            } else {
                exchange.sendResponseHeaders(405, -1);
            }
            exchange.close();
        }
    }
}
